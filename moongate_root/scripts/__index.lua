---@meta

-- This file is auto-generated. Do not edit.
-- Generated by MoonGate Ultima Server

---@class TimerRegisterData
---@field Name string
---@field IntervalInSeconds number
---@field Callback function
---@field DelayInSeconds number
---@field IsRepeat boolean

---@section Tables
console = {}
include = {}
logger = {}
scheduler = {}
template = {}
timers = {}

---@param message string
---@param args any[]
---@return nil
function logger.info(message, args) end

---@param message string
---@param args any[]
---@return nil
function logger.warn(message, args) end

---@param message string
---@param args any[]
---@return nil
function logger.error(message, args) end

---@param message string
---@param args any[]
---@return nil
function logger.debug(message, args) end

---@description Schedule a task to be run every x seconds
---@param name string
---@param seconds number
---@param callback function
---@return nil
function scheduler.add(name, seconds, callback) end

---@param file string
---@return nil
function include.file(file) end

---@param directory string
---@return nil
function include.dir(directory) end

---@description Add Variable to the text template service and you can find by use {{name}}
---@param name string
---@param value any
---@return nil
function template.add_variable(name, value) end

---@description Add Variable Builder to the text template service and you can find by use {{name}}
---@param name string
---@param builder fun(): any
---@return nil
function template.add_variabile_builder(name, builder) end

---@description Replaces the text with the variables
---@param text string
---@param context any
---@return string
function template.translate(text, context) end

---@description  Get all variables
---@return string[]
function template.get_all() end

---@description Register a timer
---@param register TimerRegisterData
---@return string
function timers.add(register) end

---@description Register a timer that repeats
---@param repeated TimerRegisterData
---@return string
function timers.add_repeated(repeated) end

---@description Register a timer that runs once
---@param register TimerRegisterData
---@return string
function timers.add_once(register) end

---@description Unregister a timer
---@param timerId string
---@return nil
function timers.delete(timerId) end

---@description Register a new console command
---@param command string
---@param description string
---@param handler fun(args: string[])
---@return nil
function console.register(command, description, handler) end

